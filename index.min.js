function UpdateCaesar(){var a=(26+Number(document.getElementById("caesarRotN").value))%26;document.getElementById("caesarRotN").value=a;document.getElementById("caesarKey").innerHTML="ABCDEFGHIJKLMNOPQRSTUVWXYZ".substr(a,26-a)+"ABCDEFGHIJKLMNOPQRSTUVWXYZ".substr(0,a);for(var d=document.getElementById("caesarIn").value,e="",c=0;c<d.length;c++)var b=d.charCodeAt(c),e=65<=b&&90>=b?e+String.fromCharCode((b-65+a)%26+65):97<=b&&122>=b?e+String.fromCharCode((b-97+a)%26+97):e+d.charAt(c);document.getElementById("caesarOut").value=
e;~e.indexOf("Alice")&&CP("Shift")}var g_beer=0;
function Beer(){g_beer=(g_beer+1)%7;6==g_beer&&CP("Beer");var a=document.getElementById("cletus");a.textContent=";Thanks! But beer ain't like a dead man, one per box.;Men, start your livers!;I'm so drunk, I cain't hit the floor with my hat.;That's four. You keep count 'cause I'm 'bout out of fingers.;Best slow down else I might could shift my words some.;Ufcwy'm mywlyn cm W4xsGR0BenrivjDmHFOPI9aP3MJJAbM4".split(";")[g_beer];a.style.display=0==g_beer?"none":"inline";a.scrollIntoView();document.getElementById("beer").src=
"Beer"+g_beer+".jpg"}var g_spyTimer,g_spyState=0,g_aSpyImg=[];function SpyHole(){0==g_aSpyImg.length&&["spy0Hole.gif","spy1Look.gif","spy2Eye.gif","spy3Hide.gif","spy4NSA.jpg"].forEach(function(a){var d=new Image;d.src=a;g_aSpyImg.push(d)});4!=g_spyState&&(g_spyState=(g_spyState+1)%4,document.getElementById("spyHole").src=g_aSpyImg[g_spyState].src,g_spyTimer=setTimeout(SpyHole,Math.round(Math.random()*[29E3,0,2E3,0][g_spyState])+500))}
function SpyPoke(){1>g_spyState||2<g_spyState||(clearTimeout(g_spyTimer),g_spyState=2,SpyHole())}function SpyPeek(){0==g_spyState&&(clearTimeout(g_spyTimer),g_spyState=0,SpyHole())}
function DoEyeDrop(a){a.preventDefault();a=a.dataTransfer.getData("text").substr(-7,3);if("NSA"==a){clearTimeout(g_spyTimer);g_spyState=4;var d=document.getElementById("spyHole");d.src="spy4NSA.jpg";d.title="Ahh, I can't see!";CP()&&(document.getElementById("spyCap").textContent=Tea.decrypt("YAeBBP9JbZHQJSsgNsSe5bRSA5rxE3+rc13zJqJKh9FJ0Msr77kh51+k7mnk4aaI",a),CP("NSA"))}}
var g_aInputs=[[0,0,1,2,3,4],[0,0,1,4,5,2,5,6,5,8,9],[0,0,1,3,3,2,7,7,5,8,9],[0,0,1,2,3,6,7,4,7,8,7,10,11,12,13],[0,0,1,2,3,6,7,4,7,8,7,10,11,12,13]],g_numLevels=5;function EncDec(a,d){var e={APrv:"{",APub:"}",BPrv:"[",BPub:"]"}[d],c=a.slice(-1),b="}{][".indexOf(e),f="{}[]".indexOf(c);if(b==f&&-1!=b){c={"{":"APrv","}":"APub","[":"BPrv","]":"BPub"}[c];try{return Tea.decrypt(a.slice(0,-1),c)}catch(h){}}return Tea.encrypt(a,d)+e}
function StrHash(a){return a.split("").reduce(function(a,e){a=(a<<5)-a+e.charCodeAt(0);return a&a},0)}
function UpdateLevel(a){for(var d,e=1;e<=g_numLevels&&(d=document.getElementById("Level"+e),!d.contains(a));e++);console.assert(e<=g_numLevels,"Could not find parent level for %o",a);var c=g_aInputs[e-1],b=d.querySelectorAll(".io");console.assert(b.length==c.length,"aIONodes does not match g_aInputs");for(var f=0;f<b.length&&b[f]!=a;f++);console.assert(f<b.length,"Could not find changed element %o",a);for(a=[f];0<a.length;){var h=a.pop(),g=b[h];if("INPUT"==g.tagName&&h!=f){var k=b[c[h]];if("INPUT"==
k.tagName)if(1==e&&3==h&&257923834==StrHash(b[0].value))g.value=Tea.decrypt(b[0].value,"APrv"),CP("Alice");else{if(3==e&&5==h)switch(b[1].alt){case "None":case "APub":k=b[3];break;case "BPub":k=b[7]}g.value=k.value}else{var l=b[c[c[h]]].value,k=k.alt;g.value="None"==k?l:EncDec(l,k)}}for(g=1;g<c.length;g++)c[g]==h&&a.push(g)}c=d.querySelector(".feedback");c.innerHTML="Something unexpected has happened.";switch(e){case 1:switch(b[4].alt){case "None":c.innerHTML="Which key should Bob use?";break;case "APrv":c.innerHTML=
"Only Alice should use Alice's private key.";break;case "BPub":c.innerHTML="Hint:&nbsp; Bob should try using Alice's public key.";break;case "APub":c.innerHTML=b[b.length-1].value==b[0].value?"SUCCESS!&nbsp; Bob has received Alice's secret message.":"Bob can't decrypt the message."}break;case 2:switch(b[1].alt){case "None":c.innerHTML="Which key should Alice use?";break;case "APub":c.innerHTML="Bob can't decrypt the message.";break;case "APrv":c.innerHTML="Eve has intercepted the message.";break;
case "BPub":c.innerHTML=b[b.length-1].value==b[0].value?"SUCCESS!&nbsp; Alice's message was kept confidential.":"Bob can't decrypt the message."}break;case 3:switch(b[1].alt){case "None":c.innerHTML="Which key should Alice use to sign her message?";break;case "APub":c.innerHTML="Chuck used Alice's public key to send a fake message.";break;case "BPub":c.innerHTML="Bob suspects the message is not from Alice.";break;case "APrv":switch(b[9].alt){case "None":c.innerHTML="The message is from Alice but what does it say?";
break;case "BPub":c.innerHTML="The message was not encrypted with Bob's private key.";break;case "APrv":c.innerHTML="Only Alice should use Alice's private key.";break;case "APub":c.innerHTML=b[b.length-1].value==b[0].value?"SUCCESS!&nbsp; Bob knows the message came from Alice.":"Bob can't decrypt the message."}}break;case 4:c.innerHTML=b[7].value==b[0].value?"Don't let the Internet see Alice's message.":b[5].value==b[0].value||b[9].value==b[0].value?"Someone on the Internet has decrypted Alice's message.":
"APrv"==b[13].alt?"Only Alice should use Alice's private key.":"APub"!=b[13].alt?"Bob isn't sure if Alice's message is real.":b[14].value!=b[0].value?"BPub"==b[1].alt&&"APrv"==b[3].alt&&"APub"==b[13].alt?"Order is important, try switching Alice's keys.":"Bob can't decrypt Alice's message.":"SUCCESS!&nbsp; The message is confidential and authentic.";break;case 5:c.innerHTML=b[5].value==b[0].value||b[7].value==b[0].value||b[9].value==b[0].value?"SUCCESS!&nbsp; You understand the strengths and weaknesses of cryptography.":
"None"!=b[6].alt&&"None"!=b[7].alt?"Is there some other way to COPY the original message?":"Appearing secure is not the same as being secure."}f==b.length-1&&b[b.length-1].value==b[0].value&&(c.innerHTML="Sometimes even the best security can be thwarted.");"S"==c.innerHTML[0]&&(d.querySelector("button[type=submit]").style.display="inline-block")}
function DoDragStart(a){a.dataTransfer.setData("Encrypt_keyID",a.target.alt);a.dataTransfer.effectAllowed="copy";a.target.classList.contains("drop")&&(a.target.setAttribute("alt","None"),a.target.setAttribute("src","None.gif"),UpdateLevel(a.target))}function DoDropDisable(a){a.preventDefault();a.dataTransfer.dropEffect="none";return!1}function DoDragOver(a){a.preventDefault();a.dataTransfer.dropEffect="copy";a.currentTarget.style.border="2px dashed black";return!1}
function DoDragLeave(a){a.currentTarget.style.border="none";return!1}function DoDrop(a){a.preventDefault();a.currentTarget.style.border="none";var d=a.dataTransfer.getData("Encrypt_keyID");d&&(a.target.setAttribute("alt",d),a.target.setAttribute("src",d+".gif"),UpdateLevel(a.target))}
function ShowLevel(a){var d=document.querySelector("#KeyGame ul.tabs li.tab_active");d&&d.removeAttribute("class");document.getElementById(d.getAttribute("data-tab_id")).style.display="none";a=document.querySelector("#KeyGame ul.tabs li:nth-child("+a+")");a.setAttribute("class","tab_active");document.getElementById(a.getAttribute("data-tab_id")).style.display="inline-block"}
function ResetLevel(a){a=document.getElementById("Level"+a);var d=a.querySelectorAll(".drop");[].forEach.call(d,function(a){a.setAttribute("alt","None");a.setAttribute("src","None.gif")});a.querySelector("button[type=submit]").style.display="none";UpdateLevel(a.querySelector("input"))}function ResetAll(a){for(a=0;a<g_numLevels;a++)ResetLevel(a+1);ShowLevel(1)}
function InitKeyGame(){g_numLevels=document.querySelectorAll("#KeyGame section.tab").length;var a=document.querySelectorAll("#KeyGame ul.tabs li");console.assert(a.length==g_numLevels,"number of tabs != number of levels");for(var d=0;d<a.length;d++)a[d].onclick=function(a){return function(){ShowLevel(a+1)}}(d);a=document.querySelectorAll("#KeyGame input");[].forEach.call(a,function(a){a.addEventListener("input",function(a){UpdateLevel(a.target)});a.addEventListener("dragover",DoDropDisable);a.addEventListener("drop",
DoDropDisable)});a=document.querySelectorAll("#KeyGame .drag");[].forEach.call(a,function(a){a.addEventListener("dragstart",DoDragStart)});a=document.querySelectorAll("#KeyGame .drop");[].forEach.call(a,function(a){a.addEventListener("dragstart",DoDragStart);a.addEventListener("dragover",DoDragOver);a.addEventListener("dragleave",DoDragLeave);a.addEventListener("drop",DoDrop)});ResetAll();a=document.getElementById("spyHole");a.addEventListener("drop",DoEyeDrop);a.addEventListener("dragover",function(a){a.preventDefault()});
SpyHole()}window.addEventListener("load",InitKeyGame);